/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Persondesc;
import model.Persondeschistory;
import model.Vitaldesc;
import model.Vitaldeschistory;








/**
 *
 * 
 */
public class ViewJPanelencounter extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    Persondeschistory history;
    Vitaldeschistory vitalhistory;
     //public static final String[] com = {"Street1", "Street2"};
    public ViewJPanelencounter(Persondeschistory history,Vitaldeschistory vitalhistory) {
        initComponents();
        this.history = history;
        this.vitalhistory = vitalhistory;
          tblvital.setShowVerticalLines(true);
            tblencount.setShowVerticalLines(true);
        populateTable();
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblvital = new javax.swing.JTable();
        btnencount = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblencount = new javax.swing.JTable();
        btndelete1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(691, 542));

        tblvital.setBackground(new java.awt.Color(204, 255, 204));
        tblvital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Selobj", "id", "Name", "Address", "Community", "Age", "City"
            }
        ));
        jScrollPane1.setViewportView(tblvital);
        if (tblvital.getColumnModel().getColumnCount() > 0) {
            tblvital.getColumnModel().getColumn(0).setMinWidth(20);
            tblvital.getColumnModel().getColumn(0).setMaxWidth(20);
            tblvital.getColumnModel().getColumn(1).setPreferredWidth(10);
            tblvital.getColumnModel().getColumn(3).setPreferredWidth(10);
            tblvital.getColumnModel().getColumn(4).setPreferredWidth(10);
            tblvital.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        btnencount.setBackground(new java.awt.Color(102, 153, 255));
        btnencount.setText("View Encounters");
        btnencount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnencountActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setText("View Encounters of  Persons");

        tblencount.setBackground(new java.awt.Color(204, 255, 204));
        tblencount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Selobj", "id", "Systolic Blood Pressure", "Diastolic blood pressure", "Date Of Encounter"
            }
        ));
        jScrollPane2.setViewportView(tblencount);
        if (tblencount.getColumnModel().getColumnCount() > 0) {
            tblencount.getColumnModel().getColumn(0).setMinWidth(20);
            tblencount.getColumnModel().getColumn(0).setMaxWidth(20);
            tblencount.getColumnModel().getColumn(1).setPreferredWidth(10);
            tblencount.getColumnModel().getColumn(3).setPreferredWidth(10);
            tblencount.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        btndelete1.setBackground(new java.awt.Color(102, 153, 255));
        btndelete1.setText("Delete");
        btndelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(btnencount)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(btndelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnencount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btndelete1)
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnencountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnencountActionPerformed
        // TODO add your handling code here:
     int SelectedRowIndex=tblvital.getSelectedRow();
     
        if(SelectedRowIndex<0)
        {
         JOptionPane.showMessageDialog(this, "Please select a row to view Encounters");
            
        return;
        }
        DefaultTableModel model1 =(DefaultTableModel) tblvital.getModel();
        Persondesc selectedvital= (Persondesc) model1.getValueAt(SelectedRowIndex, 0); 
     int perid=selectedvital.getId();
     
         var now = new Date();
       // DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm");
         DateFormat df = new SimpleDateFormat("dd-MM-yyyy HH:mm");
  //  System.out.println("date is " + df.format(currentDate));
       populateencountTable(perid);
    }//GEN-LAST:event_btnencountActionPerformed
    
    private void btndelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelete1ActionPerformed
        // TODO add your handling code here:
        int SelectedRowIndex1=tblvital.getSelectedRow();
         DefaultTableModel model11 =(DefaultTableModel) tblvital.getModel();
        Persondesc selectedvital= (Persondesc) model11.getValueAt(SelectedRowIndex1, 0); 
     int perid=selectedvital.getId();
       
         int SelectedRowIndex=tblencount.getSelectedRow();
        if(SelectedRowIndex<0)
        {
         JOptionPane.showMessageDialog(this, "Please select a row to delete encounter details");
            
        return;
        }
        DefaultTableModel model =(DefaultTableModel) tblencount.getModel();
        Vitaldesc selectedencount= (Vitaldesc) model.getValueAt(SelectedRowIndex, 0);
        vitalhistory.deletevitals(selectedencount);
        JOptionPane.showMessageDialog(this, "selected data deleted");
        populateencountTable(perid);
       
    }//GEN-LAST:event_btndelete1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete1;
    private javax.swing.JButton btnencount;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblencount;
    private javax.swing.JTable tblvital;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model =(DefaultTableModel) tblvital.getModel();
   
    
    // System.out.println("hello"+vs.get(0));
    
    
   model.setRowCount(0);
   
  
 for( Persondesc vs: history.getHistory())
       {
     Object[] row= new Object[7];
//     
  row[0]= vs;
 // System.out.println("hellosize"+vs.getseats());
//String s=cmbmanufacture.getItemAt(vs.getManufacturer());

   row[1]=vs.getId();
   row[2]=vs.getPname();
   row[3]=vs.getAddress();
   row[4]=vs.getCommunity();
   row[5]=vs.getAge();
   row[6]=vs.getCity();
   // row[2]=cmbmodel.getItemAt(vs.getModelno());
   
  // row[3]=cmbseat.getItemAt(vs.getSeats());
  // row[3]=vs.getSeats();
  // row[4]=vs.getQty_available();
   // row[5]=cmbcity.getItemAt(vs.getCity());
  //  row[6]=vs.getFleet();
    model.addRow(row);
   }
    }
    //encounterpopulate
     private void populateencountTable(int perid) {
    DefaultTableModel model1 =(DefaultTableModel) tblencount.getModel();
   
    
    // System.out.println("hello"+vs.get(0));
    
    
   model1.setRowCount(0);
   
  
 for( Vitaldesc vse: vitalhistory.getvitalHistory())
       {
     Object[] row1= new Object[7];
//     
  row1[0]= vse;
 // System.out.println("hellosize"+vs.getseats());
//String s=cmbmanufacture.getItemAt(vs.getManufacturer());
if(vse.getId()==perid)
{
   row1[1]=vse.getId();
   row1[2]=vse.getSp();
   row1[3]=vse.getDp();
   row1[4]=vse.getVitaldate();
   
   
    model1.addRow(row1);
}
   }
    }
    //encounterpopulate ends
     //encountalltable
     
     
     //encountalltable ends
   // @Override
public void setValueAt(Object value, int row, int col) {

}
}
