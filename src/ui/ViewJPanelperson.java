/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Persondesc;
import model.Persondeschistory;








/**
 *
 * 
 */
public class ViewJPanelperson extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    Persondeschistory history;
     public static final String[] com = {"Street1", "Street2"};
    public ViewJPanelperson(Persondeschistory history) {
        initComponents();
        this.history = history;
         tblvital.setShowVerticalLines(true);
          
        populateTable();
        
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblvital = new javax.swing.JTable();
        btnview = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        lblmanufacturer = new javax.swing.JLabel();
        lblserial = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnupdate1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        lbladdress = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        btnedit = new javax.swing.JButton();
        txtcomm = new javax.swing.JTextField();
        txtcity = new javax.swing.JTextField();
        btnhome = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(691, 542));

        tblvital.setBackground(new java.awt.Color(204, 255, 204));
        tblvital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Selobj", "id", "Name", "Address", "Community", "Age", "City"
            }
        ));
        jScrollPane1.setViewportView(tblvital);
        if (tblvital.getColumnModel().getColumnCount() > 0) {
            tblvital.getColumnModel().getColumn(0).setMinWidth(20);
            tblvital.getColumnModel().getColumn(0).setMaxWidth(20);
            tblvital.getColumnModel().getColumn(3).setPreferredWidth(10);
            tblvital.getColumnModel().getColumn(4).setPreferredWidth(10);
            tblvital.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        btnview.setBackground(new java.awt.Color(102, 153, 255));
        btnview.setText("View");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(102, 153, 255));
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        lblmanufacturer.setText("Community");

        lblserial.setText("Age");

        txtage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtageKeyPressed(evt);
            }
        });

        jLabel4.setText("City");

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setText("View Registered Persons");

        btnupdate.setBackground(new java.awt.Color(102, 153, 255));
        btnupdate.setText("Add New Person");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnupdate1.setBackground(new java.awt.Color(102, 153, 255));
        btnupdate1.setText("Update");
        btnupdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdate1ActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        txtid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidKeyPressed(evt);
            }
        });

        jLabel2.setText("Name");

        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnameKeyPressed(evt);
            }
        });

        lbladdress.setText("Address");

        btnedit.setBackground(new java.awt.Color(102, 153, 255));
        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        txtcity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcityKeyPressed(evt);
            }
        });

        btnhome.setText("Home");
        btnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 48, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(27, 27, 27))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(17, 17, 17)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblserial, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(btnupdate)
                                        .addGap(39, 39, 39)
                                        .addComponent(btnupdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtage, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                                    .addComponent(txtid)))
                                            .addComponent(txtcity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(lblmanufacturer)
                                            .addComponent(lbladdress))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtcomm, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                            .addComponent(txtname)
                                            .addComponent(txtaddress))))
                                .addGap(115, 115, 115))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnedit, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(btnview, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnhome, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnhome))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnedit)
                    .addComponent(btnview)
                    .addComponent(btndelete))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblserial)
                    .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcomm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmanufacturer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbladdress)
                    .addComponent(jLabel4)
                    .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnupdate)
                    .addComponent(btnupdate1))
                .addContainerGap(105, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        
        
        int SelectedRowIndex=tblvital.getSelectedRow();
        if(SelectedRowIndex<0)
        {
         JOptionPane.showMessageDialog(this, "Please select a row to delete");
            
        return;
        }
        DefaultTableModel model =(DefaultTableModel) tblvital.getModel();
        Persondesc selectedvital= (Persondesc) model.getValueAt(SelectedRowIndex, 0);
        history.deletevitals(selectedvital);
        JOptionPane.showMessageDialog(this, "selected data deleted");
        populateTable();
        
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
     int SelectedRowIndex=tblvital.getSelectedRow();
        if(SelectedRowIndex<0)
        {
         JOptionPane.showMessageDialog(this, "Please select a row to view");
            
        return;
        }
        DefaultTableModel model1 =(DefaultTableModel) tblvital.getModel();
        Persondesc selectedvital= (Persondesc) model1.getValueAt(SelectedRowIndex, 0); 
      txtaddress.setText(String.valueOf(selectedvital.getAddress()));
       txtname.setText(String.valueOf(selectedvital.getPname()));
        txtage.setText(String.valueOf(selectedvital.getAge()));
         txtid.setText(String.valueOf(selectedvital.getId()));
         txtcity.setText(String.valueOf(selectedvital.getCity()));
         txtcomm.setText(String.valueOf(selectedvital.getCommunity()));
       //  cmbcomm.setText(String.valueOf(selectedvital.getCommunity()));
         //cmbcomm.setSelectedItem(selectedvital.getCommunity());
        // cmbcomm.
        // cmbmodel.setText(String.valueOf(selectedvital.getModelno()));
      /* cmbmanufacture.setSelectedIndex(selectedvital.getManufacturer());
        txtserial.setText(String.valueOf(selectedvital.getSerial()));
        cmbmodel.setSelectedIndex(selectedvital.getModelno());
        // cmbseat.setSelectedIndex(selectedvital.getSeats());
        cmbavailable.setSelectedIndex(selectedvital.getAvailable());
         cmbyear.setSelectedIndex(selectedvital.getManyear());
         cmbcity.setSelectedIndex(selectedvital.getCity());
        // txtunits.setText(String.valueOf(selectedvital.getQty_available()));
         cmbexpired.setSelectedIndex(selectedvital.getExp_certificate());*/
         var now = new Date();
       // DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm");
         DateFormat df = new SimpleDateFormat("dd-MM-yyyy HH:mm");
  //  System.out.println("date is " + df.format(currentDate));
      //  var now = new Date();
        //now=df.format(now);
        //txtfleet.setText(df.format(selectedvital.getFleet()));
        // txtfleet.setText(selectedvital.getFleet());
        // cmbmanufacturer.set
    }//GEN-LAST:event_btnviewActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
 String address=txtaddress.getText();
        String pname=txtname.getText();
        String community=txtcomm.getText();
   String city=txtcity.getText();
   //
    int stop=0;
     if(txtname.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter valid name");
         stop=1;
     }
     if(txtaddress.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter valid address");
         stop=1;
     }
     if(txtcity.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter valid city name");
         stop=1;
     }
     if(txtcomm.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter valid communityname");
         stop=1;
     }
     if(txtage.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter valid age");
         stop=1;
     }
     if(txtid.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter valid ID");
         stop=1;
     }
     
   //
   int age=0;
    if(!txtage.getText().isBlank())
    {
    age=Integer.parseInt(txtage.getText());
    }
   int id=0;
    if(!txtid.getText().isBlank())
    {
     id=Integer.parseInt(txtid.getText());
    }
   var now = new Date();
       
        Date fleet=now;
  if(stop==0)
  {
      //checking if id is already there
      int found=0;
       for( Persondesc vs: history.getHistory())
       {
        int idfound=vs.getId();
   if(idfound==Integer.parseInt(txtid.getText()))
   {
       found=1;
   }
  
       }//for
      if(found==0)
      {
Persondesc md= history.addnewdesc();
md.setCommunity(community);
md.setAddress(address);
md.setAge(age);
md.setPname(pname);
md.setCity(city);
md.setId(id);



JOptionPane.showMessageDialog(this,"new Person added");

       populateTable(); 
      }
      else
      {
          JOptionPane.showMessageDialog(this,"Person already available");
      }
  }//stop
  txtid.setText("");
  txtname.setText("");
  txtage.setText("");
  txtcity.setText("");
  txtcomm.setText("");
  txtaddress.setText("");
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnupdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdate1ActionPerformed
System.out.println("cntrl......");
        // TODO add your handling code here:
        int count=tblvital.getRowCount();
       
         int SelectedRowIndex=tblvital.getSelectedRow();
        //if(SelectedRowIndex<0)
        //{
        // JOptionPane.showMessageDialog(this, "Please select a row to update");
            
       // return;
       // }
        int row1 = tblvital.getSelectedRow();
int col1= tblvital.getSelectedColumn();
//Persondesc vs: history.getHistory();
//tblvital.getCellEditor().stopCellEditing();
System.out.print( "rowcount" + tblvital.getRowCount() );
System.out.print( "colcount" + tblvital.getColumnCount() );
  //tblvital.getModel().getValueAt(row, col)         
Object[] val=new Object[7];

 for( int row = 0; row < tblvital.getRowCount(); row++ )
          { //Persondesc md= history.addnewdesc();
            for( int col = 0; col < tblvital.getColumnCount(); col ++)
            {
               
              System.out.print( "  " + row + "," + col + " = " + tblvital.getValueAt( row, col ) );
           //String value = (String) tblvital.getValueAt(row, col) ;
          // Persondesc md= history.addnewdesc();
            if(col==1)
            {
           int id=Integer.parseInt(tblvital.getValueAt( row, col ).toString());
           tblvital.setValueAt(id, row, col);
           //md.setId(id);
           System.out.println("Akhil");
           
            }
         /* 
          if(col==2)
          {String pname=tblvital.getValueAt( row, col ).toString();
              md.setPname(pname);
              }
          if(col==3)
          {String address=tblvital.getValueAt( row, col ).toString();
             md.setAddress(address);
              }
          if(col==4)
          {String comm=tblvital.getValueAt( row, col ).toString();
           md.setCommunity(comm);
              }
           if(col==5)
          {int age=Integer.parseInt(tblvital.getValueAt( row, col ).toString());
           md.setAge(age);
              }*/
         //  if(col==6)
          //{String city=tblvital.getValueAt( row, col ).toString();
         //  md.setCity(city);
          //    }

           //if((col==1)||(col==5))
           //{
              // int k=Integer.parseInt(tblvital.getValueAt(row, col).toString());
               //String k = (String)tblvital.getValueAt(row, col);
           //tblvital.setValueAt(k, row, col);
          // }
          // else
           //{//String value = (String)tblvital.getValueAt(row, col) ;
            //   String value = (String)tblvital.getValueAt(row, col).toString() ;
          // tblvital.setValueAt(value, row, col);
          //  }
            
            //System.out.println( " " );
          }
          }
//String value = (String) tblvital.getValueAt(row1, col1) ;
 //System.out.println("value " + value);
//tblvital.setValueAt(value, row1, col1);
validate();
    }//GEN-LAST:event_btnupdate1ActionPerformed
    
    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        
          int SelectedRowIndex=tblvital.getSelectedRow();
        int x=  tblvital.getSelectedColumn();
        System.out.println("row is " + SelectedRowIndex);
         System.out.println("col is " + x);
        if(SelectedRowIndex<0)
        {
         JOptionPane.showMessageDialog(this, "Please select a row to update");
            
        return;
        }
       
         tblvital.editCellAt(SelectedRowIndex,x);
//tblvital.setEnabled(true);
    }//GEN-LAST:event_btneditActionPerformed

    private void txtidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyPressed
        // TODO add your handling code here:
        String id =txtid.getText();
        //if(PhoneNo.matches("^[0-9]*$") && PhoneNo.length()==10)
        if((id.matches("^[0-9]*$")) && (id.length()<11) )
        {
            //txtid.setBackground(Color.yellow);
            //JOptionPane.showMessageDialog(null,"You Have Entered Correct PhoneNO");
        }
        else
       
        {
            //txtid.setBackground(Color.blue);
            JOptionPane.showMessageDialog(null,"Please Enter Correct ID");
        }
    }//GEN-LAST:event_txtidKeyPressed

    private void txtageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtageKeyPressed
        // TODO add your handling code here:
        String age =txtage.getText();
        //if(PhoneNo.matches("^[0-9]*$") && PhoneNo.length()==10)
        if((age.matches("^[0-9]*$")) && (age.length()<4) )
        {
            //txtage.setBackground(Color.yellow);
            //JOptionPane.showMessageDialog(null,"You Have Entered Correct PhoneNO");
        }
        else
       
        {
            //txtage.setBackground(Color.blue);
            JOptionPane.showMessageDialog(null,"Please Enter Correct Age");
        }
    }//GEN-LAST:event_txtageKeyPressed

    private void txtcityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcityKeyPressed
        // TODO add your handling code here:
        String city =txtcity.getText();
        Pattern pattern = Pattern.compile(new String ("^[a-zA-Z\\s]*$"));
        Matcher matcher = pattern.matcher(city);
    if(matcher.matches())
    {
         //if pattern matches
        //txtName.setBackground(Color.yellow);
    }
    else
    {
         //if pattern does not matches
        //txtName.setBackground(Color.orange);
            JOptionPane.showMessageDialog(null,"Please Enter Correct City");
    }
    }//GEN-LAST:event_txtcityKeyPressed

    private void txtnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyPressed
        // TODO add your handling code here:
        String name =txtname.getText();
        Pattern pattern = Pattern.compile(new String ("^[a-zA-Z\\s]*$"));
        Matcher matcher = pattern.matcher(name);
    if(matcher.matches())
    {
         //if pattern matches
        //txtName.setBackground(Color.yellow);
    }
    else
    {
         //if pattern does not matches
        //txtName.setBackground(Color.orange);
            JOptionPane.showMessageDialog(null,"Please Enter your Correct Name");
    }
    }//GEN-LAST:event_txtnameKeyPressed

    private void btnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhomeActionPerformed
        // TODO add your handling code here:
         new welcomeJFrame().setVisible(true);
    }//GEN-LAST:event_btnhomeActionPerformed

   


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnhome;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton btnupdate1;
    private javax.swing.JButton btnview;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbladdress;
    private javax.swing.JLabel lblmanufacturer;
    private javax.swing.JLabel lblserial;
    private javax.swing.JTable tblvital;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtcomm;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model =(DefaultTableModel) tblvital.getModel();
   
       model.setRowCount(0);
   
  
 for( Persondesc vs: history.getHistory())
       {
     Object[] row= new Object[7];
//     
  row[0]= vs;
 // System.out.println("hellosize"+vs.getseats());
//String s=cmbmanufacture.getItemAt(vs.getManufacturer());

   row[1]=vs.getId();
   row[2]=vs.getPname();
   row[3]=vs.getAddress();
   row[4]=vs.getCommunity();
   row[5]=vs.getAge();
   row[6]=vs.getCity();
  
    model.addRow(row);
   }
    }
   // @Override
public void setValueAt(Object value, int row, int col) {
Persondesc row1=history.getHistory().get(row);
      //int  row=0;
       if(0 == col) {
           row1.setId((Integer) value);
       }
       else if(1 == col) {
           row1.setPname((String) value);
       }
       
       //else if(2 == columnIndex) {
        //   row.setHourlyRate((Double) aValue);
       //}
       //else if(3 == columnIndex) {
       //    row.setPartTime((Boolean) aValue);
      // }
}
}
