/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Persondesc;
import model.Persondeschistory;
import model.Vitaldesc;
import model.Vitaldeschistory;








/**
 *
 * 
 */
public class ViewJPanelpersonvital extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    Persondeschistory history;
     Vitaldeschistory vitalhistory;
     
    public ViewJPanelpersonvital(Persondeschistory history,Vitaldeschistory vitalhistory) {
        initComponents();
        this.history = history;
        this.vitalhistory=vitalhistory;
         var now = new Date();
         DateFormat df = new SimpleDateFormat("dd-MM-yyyy HH:mm");
          txtdate.setText(df.format(now));
          tblvital.setShowVerticalLines(true);
        populateTable();
    }

    ViewJPanelpersonvital(JPanel workArea, Persondeschistory persondeschistory,Vitaldeschistory vitalhistory) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblvital = new javax.swing.JTable();
        btnview = new javax.swing.JButton();
        lblmanufacturer = new javax.swing.JLabel();
        lblserial = new javax.swing.JLabel();
        txtsp = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtdate = new javax.swing.JTextField();
        txtdp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(691, 542));

        tblvital.setBackground(new java.awt.Color(204, 255, 204));
        tblvital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Selobj", "id", "Name", "Address", "Community", "Age", "City"
            }
        ));
        jScrollPane1.setViewportView(tblvital);
        if (tblvital.getColumnModel().getColumnCount() > 0) {
            tblvital.getColumnModel().getColumn(0).setMinWidth(20);
            tblvital.getColumnModel().getColumn(0).setMaxWidth(20);
            tblvital.getColumnModel().getColumn(3).setPreferredWidth(10);
            tblvital.getColumnModel().getColumn(4).setPreferredWidth(10);
            tblvital.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        btnview.setBackground(new java.awt.Color(102, 153, 255));
        btnview.setText("Take Vtals");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });

        lblmanufacturer.setText("Diastolic pressure");

        lblserial.setText("Systolic pressure");

        txtsp.setText("120");
        txtsp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtspKeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setText("Add Vitals for  Registered Persons");

        btnadd.setBackground(new java.awt.Color(102, 153, 255));
        btnadd.setText("Add Vitals");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        txtid.setEditable(false);
        txtid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidKeyPressed(evt);
            }
        });

        txtdate.setEditable(false);
        txtdate.setEnabled(false);

        txtdp.setText("80");
        txtdp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtdpKeyPressed(evt);
            }
        });

        jLabel2.setText("CaptureDate");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(lblserial)
                    .addComponent(jLabel2)
                    .addComponent(lblmanufacturer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtsp, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(txtdp, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtdate, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtid))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addComponent(btnview, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(272, 272, 272)
                                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 273, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(btnview)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblserial))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtdp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmanufacturer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btnadd)
                .addGap(86, 86, 86))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
     int SelectedRowIndex=tblvital.getSelectedRow();
        if(SelectedRowIndex<0)
        {
         JOptionPane.showMessageDialog(this, "Please select a row to view");
            
        return;
        }
        DefaultTableModel model1 =(DefaultTableModel) tblvital.getModel();
        Persondesc selectedvital= (Persondesc) model1.getValueAt(SelectedRowIndex, 0); 
     // txtdate.setText(String.valueOf(selectedvital.getAddress()));
       //txtname.setText(String.valueOf(selectedvital.getPname()));
        //txtsp.setText(String.valueOf(selectedvital.getAge()));
         txtid.setText(String.valueOf(selectedvital.getId()));
       //  cmbcomm.setText(String.valueOf(selectedvital.getCommunity()));
         //cmbcomm.setSelectedItem(selectedvital.getCommunity());
        // cmbcomm.
        // cmbmodel.setText(String.valueOf(selectedvital.getModelno()));
      /* cmbmanufacture.setSelectedIndex(selectedvital.getManufacturer());
        txtserial.setText(String.valueOf(selectedvital.getSerial()));
        cmbmodel.setSelectedIndex(selectedvital.getModelno());
        // cmbseat.setSelectedIndex(selectedvital.getSeats());
        cmbavailable.setSelectedIndex(selectedvital.getAvailable());
         cmbyear.setSelectedIndex(selectedvital.getManyear());
         cmbcity.setSelectedIndex(selectedvital.getCity());
        // txtunits.setText(String.valueOf(selectedvital.getQty_available()));
         cmbexpired.setSelectedIndex(selectedvital.getExp_certificate());*/
         var now = new Date();
       // DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm");
         DateFormat df = new SimpleDateFormat("dd-MM-yyyy HH:mm");
  //  System.out.println("date is " + df.format(currentDate));
      //  var now = new Date();
        //now=df.format(now);
        //txtfleet.setText(df.format(selectedvital.getFleet()));
        // txtfleet.setText(selectedvital.getFleet());
        // cmbmanufacturer.set
    }//GEN-LAST:event_btnviewActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
 int stop=0;
     if(txtsp.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter Systolic Pressure");
         stop=1;
     }
         if(txtdp.getText().isEmpty())
     {
         JOptionPane.showMessageDialog(this, "Please enter Diastolic Pressure");
         stop=1;
     }
            
      
   int sp=120;
    if(!txtsp.getText().isBlank())
    {
    sp=Integer.parseInt(txtsp.getText());
    }
     int dp=80;
    if(!txtdp.getText().isBlank())
    {
    dp=Integer.parseInt(txtdp.getText());
    }
   int id=0;
    if(!txtid.getText().isBlank())
    {
     id=Integer.parseInt(txtid.getText());
    }
   var now = new Date();
       
        Date fleet=now;
  if(stop==0)
  {
Vitaldesc md= vitalhistory.addnewdesc();
md.setDp(dp);
md.setId(id);
md.setSp(sp);
md.setVitaldate(fleet);




JOptionPane.showMessageDialog(this,"new Vital for Patient added");
txtsp.setText("120");
txtdp.setText("80");
  }//if
  
 
     //  populateTable();   

    }//GEN-LAST:event_btnaddActionPerformed

    private void txtspKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtspKeyPressed
        // TODO add your handling code here:
         String sp =txtsp.getText();
        //if(PhoneNo.matches("^[0-9]*$") && PhoneNo.length()==10)
        if((sp.matches("^[0-9]*$")) && (sp.length()<4) )
        {
            //txtage.setBackground(Color.yellow);
            //JOptionPane.showMessageDialog(null,"You Have Entered Correct PhoneNO");
        }
        else
       
        {
            //txtage.setBackground(Color.blue);
            JOptionPane.showMessageDialog(null,"Please Enter Correct Vital");
            txtsp.setText("");
        }
    }//GEN-LAST:event_txtspKeyPressed

    private void txtdpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdpKeyPressed
        // TODO add your handling code here:
         String dp =txtdp.getText();
        //if(PhoneNo.matches("^[0-9]*$") && PhoneNo.length()==10)
        if((dp.matches("^[0-9]*$")) && (dp.length()<4) )
        {
            //txtage.setBackground(Color.yellow);
            //JOptionPane.showMessageDialog(null,"You Have Entered Correct PhoneNO");
        }
        else
       
        {
            //txtage.setBackground(Color.blue);
            JOptionPane.showMessageDialog(null,"Please Enter Correct Vital");
            txtdp.setText("");
        }
    }//GEN-LAST:event_txtdpKeyPressed

    private void txtidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidKeyPressed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnview;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblmanufacturer;
    private javax.swing.JLabel lblserial;
    private javax.swing.JTable tblvital;
    private javax.swing.JTextField txtdate;
    private javax.swing.JTextField txtdp;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtsp;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model =(DefaultTableModel) tblvital.getModel();
   
    
    // System.out.println("hello"+vs.get(0));
     //System.out.println("hellohistory"+history.getHistory());
    // System.out.println("hellosize"+ vs.size());
     //System.out.println(vs.get(1).getManufacturer());
   /* if((vs!=null)&&(vs.size()>0))
    {
    for(int i=0;i<vs.size();i++)
    {System.out.println("hello1");
     vs:history.getHistory();
        System.out.println(vs.get(i).getManufacturer());
     Object[] row;   
         row = new Object[4];
     
    row[0]= vs.get(i).getManufacturer();
    row[1]=vs.get(i).getModel();
    row[2]=vs.get(i).getNoseats();
    row[3]=vs.get(i).getManyear();
    model.addRow(row);
    }
    } */
   model.setRowCount(0);
   
  
 for( Persondesc vs: history.getHistory())
       {
     Object[] row= new Object[7];
//     
  row[0]= vs;
 // System.out.println("hellosize"+vs.getseats());
//String s=cmbmanufacture.getItemAt(vs.getManufacturer());

   row[1]=vs.getId();
   row[2]=vs.getPname();
   row[3]=vs.getAddress();
   row[4]=vs.getCommunity();
   row[5]=vs.getAge();
   // row[2]=cmbmodel.getItemAt(vs.getModelno());
   
  // row[3]=cmbseat.getItemAt(vs.getSeats());
  // row[3]=vs.getSeats();
  // row[4]=vs.getQty_available();
   // row[5]=cmbcity.getItemAt(vs.getCity());
  //  row[6]=vs.getFleet();
    model.addRow(row);
   }
    }
   // @Override
public void setValueAt(Object value, int row, int col) {

}
}
